set previewer ~/.config/lf/previewer
set cleaner ~/.config/lf/cleaner

# Basic Settings
set hidden false
set ignorecase true
set icons true
set sixel true

# Custom Functions
cmd mkdir ${{
  printf "Directory Name: "
  read ans
  mkdir $ans
}}

cmd mkfile ${{
  printf "File Name: "
  read ans
  $EDITOR $ans
}}

cmd setwallpaper ${{
    setwallpaper "$f"
}}

# Archive bindings
cmd unarchive ${{
  case "$f" in
      *.zip) unzip "$f" ;;
      *.tar.gz) tar -xzvf "$f" ;;
      *.tar.bz2) tar -xjvf "$f" ;;
      *.tar) tar -xvf "$f" ;;
      *) echo "Unsupported format" ;;
  esac
}}

# Trash bindings
cmd trash ${{
  files=$(printf "$fx" | tr '\n' ';')
  while [ "$files" ]; do
    file=${files%%;*}

    trashy put "$(basename "$file")"
    if [ "$files" = "$file" ]; then
      files=''
    else
      files="${files#*;}"
    fi
  done
}}

cmd open &{{
	case $(file --mime-type -Lb $f) in
		text/*) lf -remote "send $id \$nvim \$fx";;
		*) xdg-open "$f"
	esac
}}

cmd on-select &{{
    lf -remote "send $id set statfmt \"$(exa -ld --color=always "$f")\""
}}

cmd fzf_find_file ${{
	selected="$(fzf)"
	lf -remote "send $id select \"$selected\""
}}
map <c-f> :fzf_find_file

map am ${{
	mntdir="${f}.mnt"
  mkdir -p "$mntdir"
  archivemount "$f" "$mntdir"
  lf -remote "send $id cd $mntdir"
}}

# Bindings
map c
map d
map m

map co $vscodium "$f"
map cf $dotbare fadd -f

map au unarchive
map ae $wine "$f"

# Basic Functions
map . set hidden!
map dd trash
map u $trashy restore -r 0
map dr $trashy restore
map de $trashy empty --all
map p paste
map x cut
map y copy
map <enter> open
map R reload
map mf mkfile
map md mkdir
map bg setwallpaper
map C clear

# Movement
map gc cd ~/.config
map gD cd ~/Documents
map gd cd ~/Downloads
map gp cd ~/Pictures
map gr cd ~/Repos
map gv cd ~/Videos
map gs cd ~/.local/bin
map gt cd ~/.local/share/Trash/files
